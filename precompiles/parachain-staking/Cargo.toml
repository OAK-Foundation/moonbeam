[package]
name = "pallet-evm-precompile-parachain-staking"
authors = { workspace = true }
description = "A Precompile to make parachain staking accessible to pallet-evm"
edition = "2021"
version = "1.0.0"

[dependencies]
log = { workspace = true }
num_enum = { workspace = true }
rustc-hex = { workspace = true }

# Moonbeam
pallet-parachain-staking = { workspace = true }
precompile-utils = { workspace = true }

# Substrate
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = [ "max-encoded-len" ] }
frame-support = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.29", default-features = false }
frame-system = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.29", default-features = false }
sp-core = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.29", default-features = false }
sp-io = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.29", default-features = false }
sp-std = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.29", default-features = false }


# Frontier
fp-evm = { workspace = true }
pallet-evm = { workspace = true, features = [ "forbid-evm-reentrancy" ] }

[dev-dependencies]
derive_more = { workspace = true }
serde = { workspace = true }
sha3 = { workspace = true }

# Moonbeam
precompile-utils = { workspace = true, features = [ "std", "testing" ] }

# Substrate
pallet-balances = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.29" }
pallet-timestamp = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.29" }
scale-info = { version = "2.0", default-features = false, features = [ "derive" ] }
sp-runtime = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.29" }

[features]
default = [ "std" ]
std = [
	"fp-evm/std",
	"frame-support/std",
	"frame-system/std",
	"pallet-parachain-staking/std",
	"parity-scale-codec/std",
	"precompile-utils/std",
	"sp-core/std",
	"sp-std/std",
]
